pipeline {
    agent any

    environment {
        DOCKER_REGISTRY_URL = "${params.harbor_url}"
        HARBOR_CREDENTIAL = credentials("harbbor_robot")
        GIT_USER_EMAIL = "${params.git_user_email}"
        GIT_CREDENTIAL = credentials("DOLONG9")
        DISCORD_WEBHOOK = credentials("MANNAZU-DISCORD_WEBHOOK")
    }

    tools {
        nodejs 'NodeJS-20.11.1' // Next.js 14.2.4와 호환되는 Node.js 버전으로 변경
    }

    stages {
        stage('Setup pnpm') {
            steps {
                sh 'npm install -g pnpm@8.15.4' // 최신 안정 버전의 pnpm 설치
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'pnpm install' 
            }
        }

        stage('Build') {
            steps {
                sh 'pnpm run build'
            }                
        }

        stage('mannazu-nextjs 이미지 빌드') {
            steps {
                script {
                    sh "ls -la"
                    docker.withRegistry("http://${DOCKER_REGISTRY_URL}", "${HARBOR_CREDENTIAL}") {
                        def customImage = docker.build("mannazo/mannazu-nextjs:${env.BUILD_NUMBER}", "-f CICD/Dockerfile .")
                        customImage.push()
                    }
                }
            }
        }

        stage('mannazo-web 업데이트') {
            steps {
                script { 
                    def manifestsRepoUrl = 'https://github.com/mannazo/mannazo-deploy.git'
                    def manifestsRepoBranch = 'main'
                    
                    git credentialsId: "${HARBOR_CREDENTIAL}", url: manifestsRepoUrl, branch: manifestsRepoBranch
                    sh """
                        git pull origin main
                        sed -i 's|harbor.dorong9.com/mannazo/mannazu-nextjs:.*|harbor.dorong9.com/mannazo/mannazu-nextjs:${env.BUILD_NUMBER}|' web/mannazu-web.yaml
                        git add web/mannazu-web.yaml
                        git config user.name 'DOLONG9'
                        git config user.email "${GIT_USER_EMAIL}"
                        git commit -m 'web/mannazu-web.yaml ${currentBuild.number} image versioning'
                    """
                    withCredentials([gitUsernamePassword(credentialsId: "${GIT_CREDENTIAL}")]) {
                       sh "git remote set-url origin https://github.com/mannazo/mannazo-deploy.git" 
                       sh "git push origin main"
                    }
                }
            }
        }
    }

    post {
        success {
            discordSend title: "Mannazu-nextjs 빌드", 
                        footer: "빌드가 성공했습니다.", 
                        link: env.BUILD_URL, result: currentBuild.currentResult, 
                        webhookURL: env.DISCORD_WEBHOOK
        }
        failure {
            discordSend title: "Mannazu-nextjs 빌드", 
                        footer: "빌드가 성공했습니다.", 
                        link: env.BUILD_URL, result: currentBuild.currentResult, 
                        webhookURL: env.DISCORD_WEBHOOK
        }
        always {
            echo 'Workspace 정리..'
            deleteDir()
        }
    }
}